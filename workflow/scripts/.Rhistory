coord_flip() +
theme_bw() +
labs(y = '% of annotated lost domains in species') +
scale_fill_manual('Lost domain classification',
values = c('black', '#008080', '#DC143C')) +
scale_x_discrete(limits = rev(SP_ORDER)) +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(color = 'black', size = 10),
axis.title.x = element_text(color = 'black', size = 14),
axis.text.x = element_text(color = 'black', size = 12))
lost_doms <- lost_doms %>%
group_by(lost_dom_annotations) %>%
separate_rows(lost_dom_annotations, sep = ', ')
ggplot(lost_doms, aes(x = species, fill = lost_dom_annotations)) +
geom_bar(position = 'fill') +
coord_flip() +
theme_bw() +
labs(y = '% of annotated lost domains in species') +
scale_fill_manual('Lost domain classification',
values = c('black', '#008080', '#DC143C')) +
scale_x_discrete(limits = rev(SP_ORDER)) +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(color = 'black', size = 10),
axis.title.x = element_text(color = 'black', size = 14),
axis.text.x = element_text(color = 'black', size = 12))
warnings()
lost_doms <- read_csv('../../results/aligned_domain_archs.csv') %>%
filter(!is.na(lost_doms)) %>%
rename(gene = yeast_ortholog) %>%
left_join(ptc_data, by = 'gene') %>%
rename(yeast_ortholog = gene) %>%
filter(!is.na(domain_ptc_annotations)) %>%
select(species, is_microsp, yeast_ortholog, species_ortholog, essential,
aligned_ortholog_domain_archs, lost_doms,
ortholog_short_enough_for_dom_loss, domain_ptc_annotations) %>%
mutate(lost_dom_annotations = get_lost_dom_annotations(aligned_ortholog_domain_archs,
domain_ptc_annotations))
view(lost_doms)
lost_doms <- read_csv('../../results/aligned_domain_archs.csv') %>%
filter(!is.na(lost_doms)) %>%
rename(gene = yeast_ortholog) %>%
left_join(ptc_data, by = 'gene') %>%
rename(yeast_ortholog = gene) %>%
filter(!is.na(domain_ptc_annotations)) %>%
select(species, is_microsp, yeast_ortholog, species_ortholog, essential,
aligned_ortholog_domain_archs, lost_doms,
ortholog_short_enough_for_dom_loss, domain_ptc_annotations) %>%
mutate(lost_dom_annotations = get_lost_dom_annotations(aligned_ortholog_domain_archs,
domain_ptc_annotations)) %>%
group_by(lost_dom_annotations) %>%
separate_rows(sep = ', ')
lost_doms <- read_csv('../../results/aligned_domain_archs.csv') %>%
filter(!is.na(lost_doms)) %>%
rename(gene = yeast_ortholog) %>%
left_join(ptc_data, by = 'gene') %>%
rename(yeast_ortholog = gene) %>%
filter(!is.na(domain_ptc_annotations)) %>%
select(species, is_microsp, yeast_ortholog, species_ortholog, essential,
aligned_ortholog_domain_archs, lost_doms,
ortholog_short_enough_for_dom_loss, domain_ptc_annotations) %>%
mutate(lost_dom_annotations = get_lost_dom_annotations(aligned_ortholog_domain_archs,
domain_ptc_annotations)) %>%
separate_rows(lost_dom_annotations, sep = ', ')
view(lost_doms)
lost_doms <- filter(lost_doms, lost_domain_annotations != 'Ambiguous')
lost_doms <- filter(lost_doms, lost_dom_annotations != 'Ambiguous')
ggplot(lost_doms, aes(x = species, fill = lost_dom_annotations)) +
geom_bar(position = 'fill') +
coord_flip() +
theme_bw() +
labs(y = '% of annotated lost domains in species') +
scale_fill_manual('Lost domain classification',
values = c('black', '#008080', '#DC143C')) +
scale_x_discrete(limits = rev(SP_ORDER)) +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(color = 'black', size = 10),
axis.title.x = element_text(color = 'black', size = 14),
axis.text.x = element_text(color = 'black', size = 12))
lost_odms
view(lost_doms)
ggplot(lost_doms, aes(x = species, fill = lost_dom_annotations)) +
geom_bar(position = 'fill') +
coord_flip() +
theme_bw() +
labs(y = '% of annotated lost domains in species') +
scale_fill_manual('Lost domain classification',
values = c('#008080', '#DC143C')) +
scale_x_discrete(limits = rev(SP_ORDER)) +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(color = 'black', size = 10),
axis.title.x = element_text(color = 'black', size = 14),
axis.text.x = element_text(color = 'black', size = 12))
}
lost_doms <- read_csv('../../results/aligned_domain_archs.csv') %>%
filter(!is.na(lost_doms)) %>%
rename(gene = yeast_ortholog) %>%
left_join(ptc_data, by = 'gene') %>%
rename(yeast_ortholog = gene) %>%
filter(!is.na(domain_ptc_annotations)) %>%
select(species, is_microsp, yeast_ortholog, species_ortholog, essential,
aligned_ortholog_domain_archs, lost_doms,
ortholog_short_enough_for_dom_loss, domain_ptc_annotations) %>%
mutate(lost_dom_annotations = get_lost_dom_annotations(aligned_ortholog_domain_archs,
domain_ptc_annotations)) %>%
separate_rows(lost_dom_annotations, sep = ', ')
lost_doms
ggplot(lost_doms, aes(x = species, fill = lost_dom_annotations)) +
geom_bar(position = 'fill') +
coord_flip() +
theme_bw() +
labs(y = '% of annotated lost domains in species') +
scale_fill_manual('Lost domain classification',
values = c('black', '#008080', '#DC143C')) +
scale_x_discrete(limits = rev(SP_ORDER)) +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(color = 'black', size = 10),
axis.title.x = element_text(color = 'black', size = 14),
axis.text.x = element_text(color = 'black', size = 12))
lost_doms %>%
mutate(is_microsp = ifelse(species == 'R_allo', FALSE, is_microsp))
lost_doms = lost_doms %>%
mutate(is_microsp = ifelse(species == 'R_allo', FALSE, is_microsp))
lost_doms %>%
group_by(is_microsp, lost_dom_annotations) %>%
mutate(n = n())
lost_doms %>%
group_by(is_microsp, lost_dom_annotations) %>%
summarise(n = n())
lost_doms %>%
group_by(is_microsp, lost_dom_annotations) %>%
summarise(n = n())
1532 / (1532 + 174)
51 / (51 + 9)
1532 / (1532 + 174 + 4615)
51 / (51 + 9 + 262)
source("~/Desktop/Projects/snakemake_hmmscan/workflow/scripts/annotate_domain_essentiality_with_ptcs.R", echo=TRUE)
plot_lost_dom_types <- function(lost_doms) {
# ---------------------------------------------------------------------------
# ---------------------------------------------------------------------------
ggplot(lost_doms, aes(x = species, fill = lost_dom_annotations)) +
geom_bar(position = 'fill') +
coord_flip() +
theme_bw() +
labs(y = '% of annotated lost domains in species') +
scale_fill_manual('Lost domain classification',
values = c('black', '#008080', '#DC143C')) +
scale_x_discrete(limits = rev(SP_ORDER)) +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(color = 'black', size = 10),
axis.title.x = element_text(color = 'black', size = 14),
axis.text.x = element_text(color = 'black', size = 12))
}
# ---------------------------------------------------------------------------
# args <- commandArgs(trailingOnly = T)
sgd_to_uniprot_names <- read_rds('../../data/yeast_genome_to_uniprot.rds')
ptc_data <- format_ptc_data(readxl::read_xls('../../data/supp_11.xls'),
sgd_to_uniprot_names)
yeast_domain_archs <- format_yeast_domain_archs(
read_delim('../../resources/yeast_domains_resolved.txt')
)
# add domain arch data to ptc data, and add column indicating essentiality
# of each domain in yeast
ptc_data <- left_join(ptc_data, yeast_domain_archs, by = 'gene') %>%
rowwise() %>%
mutate(domain_ptc_annotations = annotate_domains_with_ptc_data(ptc_tolerance,
ptc_position,
domain_starts,
domain_ends,
critical_ptc_position))
# get aligned ortholog yeast domain architectures to annotate lost domains
lost_doms <- read_csv('../../results/aligned_domain_archs.csv') %>%
filter(!is.na(lost_doms)) %>%
rename(gene = yeast_ortholog) %>%
left_join(ptc_data, by = 'gene') %>%
rename(yeast_ortholog = gene) %>%
filter(!is.na(domain_ptc_annotations)) %>%
select(species, is_microsp, yeast_ortholog, species_ortholog, essential,
aligned_ortholog_domain_archs, lost_doms,
ortholog_short_enough_for_dom_loss, domain_ptc_annotations) %>%
mutate(lost_dom_annotations = get_lost_dom_annotations(aligned_ortholog_domain_archs,
domain_ptc_annotations)) %>%
separate_rows(lost_dom_annotations, sep = ', ')
plot_lost_dom_types(lost_doms)
nematocida <- c('N_disp', 'N_cider', 'N_homo', 'N_ferr', 'N_okwa', 'N_pari', 'N_iron', 'N_ausu', 'N_majo', 'N_mino')
ggplot(filter(lost_doms, species %in% nematocida), aes(x = species, fill = lost_dom_annotations)) +
geom_bar(position = 'fill') +
coord_flip() +
theme_bw() +
labs(y = '% of annotated lost domains in species') +
scale_fill_manual('Lost domain classification',
values = c('black', '#008080', '#DC143C')) +
scale_x_discrete(limits = rev(SP_ORDER)) +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(color = 'black', size = 10),
axis.title.x = element_text(color = 'black', size = 14),
axis.text.x = element_text(color = 'black', size = 12))
nematocida <- c('N_disp', 'N_cide', 'N_homo', 'N_ferr', 'N_okwa', 'N_pari', 'N_iron', 'N_ausu', 'N_majo', 'N_mino')
ggplot(filter(lost_doms, species %in% nematocida), aes(x = species, fill = lost_dom_annotations)) +
geom_bar(position = 'fill') +
coord_flip() +
theme_bw() +
labs(y = '% of annotated lost domains in species') +
scale_fill_manual('Lost domain classification',
values = c('black', '#008080', '#DC143C')) +
scale_x_discrete(limits = rev(SP_ORDER)) +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(color = 'black', size = 10),
axis.title.x = element_text(color = 'black', size = 14),
axis.text.x = element_text(color = 'black', size = 12))
view(lost_doms)
ggplot(filter(lost_doms, species %in% nematocida, ortholog_short_enough_for_dom_loss), aes(x = species, fill = lost_dom_annotations)) +
geom_bar(position = 'fill') +
coord_flip() +
theme_bw() +
labs(y = '% of annotated lost domains in species') +
scale_fill_manual('Lost domain classification',
values = c('black', '#008080', '#DC143C')) +
scale_x_discrete(limits = rev(SP_ORDER)) +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(color = 'black', size = 10),
axis.title.x = element_text(color = 'black', size = 14),
axis.text.x = element_text(color = 'black', size = 12))
ggplot(filter(lost_doms, ortholog_short_enough_for_dom_loss), aes(x = species, fill = lost_dom_annotations)) +
geom_bar(position = 'fill') +
coord_flip() +
theme_bw() +
labs(y = '% of annotated lost domains in species') +
scale_fill_manual('Lost domain classification',
values = c('black', '#008080', '#DC143C')) +
scale_x_discrete(limits = rev(SP_ORDER)) +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(color = 'black', size = 10),
axis.title.x = element_text(color = 'black', size = 14),
axis.text.x = element_text(color = 'black', size = 12))
ggplot(filter(lost_doms, ortholog_short_enough_for_dom_loss), aes(x = species, fill = lost_dom_annotations)) +
geom_bar(position = 'fill') +
coord_flip() +
theme_bw() +
labs(y = '% of annotated lost domains in species') +
scale_fill_manual('Lost domain classification',
values = c('black', '#008080', '#DC143C')) +
scale_x_discrete(limits = rev(SP_ORDER)) +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(color = 'black', size = 10),
axis.title.x = element_text(color = 'black', size = 14),
axis.text.x = element_text(color = 'black', size = 12),)
ggplot(filter(lost_doms, ortholog_short_enough_for_dom_loss), aes(x = species, fill = lost_dom_annotations)) +
geom_bar(position = 'fill') +
coord_flip() +
theme_bw() +
labs(y = '% of annotated lost domains in species') +
scale_fill_manual('Lost domain classification',
values = c('black', '#008080', '#DC143C')) +
scale_x_discrete(limits = rev(SP_ORDER)) +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(color = 'black', size = 10),
axis.title.x = element_text(color = 'black', size = 14),
axis.text.x = element_text(color = 'black', size = 12),
legend.text = element_text(size = 4))
ggplot(filter(lost_doms, ortholog_short_enough_for_dom_loss), aes(x = species, fill = lost_dom_annotations)) +
geom_bar(position = 'fill') +
coord_flip() +
theme_bw() +
labs(y = '% of annotated lost domains in species') +
scale_fill_manual('Lost domain classification',
values = c('black', '#008080', '#DC143C')) +
scale_x_discrete(limits = rev(SP_ORDER)) +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(color = 'black', size = 10),
axis.title.x = element_text(color = 'black', size = 14),
axis.text.x = element_text(color = 'black', size = 12),
legend.text = element_text(size = 14))
ggplot(filter(lost_doms, ortholog_short_enough_for_dom_loss), aes(x = species, fill = lost_dom_annotations)) +
geom_bar(position = 'fill') +
coord_flip() +
theme_bw() +
labs(y = '% of annotated lost domains in species') +
scale_fill_manual('Lost domain classification',
values = c('black', '#008080', '#DC143C')) +
scale_x_discrete(limits = rev(SP_ORDER)) +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(color = 'black', size = 10),
axis.title.x = element_text(color = 'black', size = 14),
axis.text.x = element_text(color = 'black', size = 12),
legend.text = element_text(size = 14),
legend.title = element_text(size = 14))
ggplot(lost_doms, aes(x = species, fill = lost_dom_annotations)) +
geom_bar(position = 'fill') +
coord_flip() +
theme_bw() +
labs(y = '% of annotated lost domains in species') +
scale_fill_manual('Lost domain classification',
values = c('black', '#008080', '#DC143C')) +
scale_x_discrete(limits = rev(SP_ORDER)) +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(color = 'black', size = 10),
axis.title.x = element_text(color = 'black', size = 14),
axis.text.x = element_text(color = 'black', size = 12),
legend.text = element_text(size = 14),
legend.title = element_text(size = 14))
ggplot(lost_doms, aes(x = species, fill = lost_dom_annotations)) +
geom_bar(position = 'fill') +
coord_flip() +
theme_bw() +
labs(y = '% of annotated lost domains in species') +
scale_fill_manual('Lost domain classification',
values = c('black', '#008080', '#DC143C')) +
scale_x_discrete(limits = rev(SP_ORDER)) +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(color = 'black', size = 14),
axis.title.x = element_text(color = 'black', size = 18),
axis.text.x = element_text(color = 'black', size = 18),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18))
ggplot(lost_doms, aes(x = species, fill = lost_dom_annotations)) +
geom_bar(position = 'fill') +
coord_flip() +
theme_bw() +
labs(y = '% of annotated lost domains in species') +
scale_fill_manual('Lost domain classification',
values = c('black', '#008080', '#DC143C')) +
scale_x_discrete(limits = rev(SP_ORDER)) +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(color = 'black', size = 14),
axis.title.x = element_text(color = 'black', size = 18),
axis.text.x = element_text(color = 'black', size = 14),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18))
ggplot(filter(lost_doms, ortholog_short_enough_for_domain_loss), aes(x = species, fill = lost_dom_annotations)) +
geom_bar(position = 'fill') +
coord_flip() +
theme_bw() +
labs(y = '% of annotated lost domains in species') +
scale_fill_manual('Lost domain classification',
values = c('black', '#008080', '#DC143C')) +
scale_x_discrete(limits = rev(SP_ORDER)) +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(color = 'black', size = 14),
axis.title.x = element_text(color = 'black', size = 18),
axis.text.x = element_text(color = 'black', size = 14),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18))
colnames(lost_doms)
ggplot(filter(lost_doms, ortholog_short_enough_for_dom_loss), aes(x = species, fill = lost_dom_annotations)) +
geom_bar(position = 'fill') +
coord_flip() +
theme_bw() +
labs(y = '% of annotated lost domains in species') +
scale_fill_manual('Lost domain classification',
values = c('black', '#008080', '#DC143C')) +
scale_x_discrete(limits = rev(SP_ORDER)) +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(color = 'black', size = 14),
axis.title.x = element_text(color = 'black', size = 18),
axis.text.x = element_text(color = 'black', size = 14),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18))
ggplot(filter(lost_doms, species %in% nematocida), aes(x = species, fill = lost_dom_annotations)) +
geom_bar(position = 'fill') +
coord_flip() +
theme_bw() +
labs(y = '% of annotated lost domains in species') +
scale_fill_manual('Lost domain classification',
values = c('black', '#008080', '#DC143C')) +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(color = 'black', size = 14),
axis.title.x = element_text(color = 'black', size = 18),
axis.text.x = element_text(color = 'black', size = 14),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18))
ggplot(filter(lost_doms, species %in% nematocida, ortholog_short_enough_for_dom_loss), aes(x = species, fill = lost_dom_annotations)) +
geom_bar(position = 'fill') +
coord_flip() +
theme_bw() +
labs(y = '% of annotated lost domains in species') +
scale_fill_manual('Lost domain classification',
values = c('black', '#008080', '#DC143C')) +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(color = 'black', size = 14),
axis.title.x = element_text(color = 'black', size = 18),
axis.text.x = element_text(color = 'black', size = 14),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18))
view(ptc_data)
ptc_data %>%
separate_rows(domain_ptc_annotations, sep = ', ') %>%
group_by(domain_ptc_annotations) %>%
summarise(n = n())
ggplot(filter(lost_doms, !is_microsp), aes(x = species, fill = lost_dom_annotations)) +
geom_bar(position = 'fill') +
coord_flip() +
theme_bw() +
labs(y = '% of annotated lost domains in species') +
scale_fill_manual('Lost domain classification',
values = c('black', '#008080', '#DC143C')) +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(color = 'black', size = 14),
axis.title.x = element_text(color = 'black', size = 18),
axis.text.x = element_text(color = 'black', size = 14),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18))
ggplot(filter(lost_doms, is_microsp), aes(x = species, fill = lost_dom_annotations)) +
geom_bar(position = 'fill') +
coord_flip() +
theme_bw() +
labs(y = '% of annotated lost domains in species') +
scale_fill_manual('Lost domain classification',
values = c('black', '#008080', '#DC143C')) +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(color = 'black', size = 14),
axis.title.x = element_text(color = 'black', size = 18),
axis.text.x = element_text(color = 'black', size = 14),
legend.text = element_text(size = 18),
legend.title = element_text(size = 18))
view(lost_doms)
lost_doms %>%
mutate(group = ifelse(!is_microsp | species == 'R_allo', 'outgroup', 'microsporidia')) %>%
group_by(group) %>%
summarise(n = n())
322 * 6
0.05 * 322
lost_doms %>%
mutate(group = ifelse(!is_microsp | species == 'R_allo', 'outgroup', 'microsporidia')) %>%
group_by(group, lost_dom_type) %>%
summarise(n = n())
lost_doms %>%
mutate(group = ifelse(!is_microsp | species == 'R_allo', 'outgroup', 'microsporidia')) %>%
group_by(group, lost_dom_annotations) %>%
summarise(n = n())
view(filter(lost_doms, !is_microsp))
view(filter(lost_doms, !is_microsp | species == 'R_allo'))
prop.test(c(1532, 51), c(1532 + 174, 51 + 9), p = NULL, alternative = "two.sided",
correct = TRUE)
lost_doms %>%
mutate(group = ifelse(!is_microsp | species == 'R_allo', 'outgroup', 'microsporidia')) %>%
filter(ortholog_short_enough_for_dom_loss) %>%
group_by(group, lost_dom_annotations) %>%
summarise(n = n())
prop.test(c(576, 15), c(576 + 137, 15 + 5), p = NULL, alternative = "two.sided",
correct = TRUE)
x = data.frame(
'essential' = c(576, 15),
'dispensable' = c(137, 5),
row.names = c('microsporidia', 'outgroup'),
stringsAsFactors = F
)
x
colnames(x) <- ('essential', 'dispensable')
colnames(x) <- c('essential', 'dispensable')
x
fisher.test(x)
source("~/Desktop/Projects/snakemake_hmmscan/workflow/scripts/get_percent_lost_essential_AAs.R", echo=TRUE)
# TODO - replace w/ command line arguments
sgd_to_uniprot_names <- read_rds('../../data/yeast_genome_to_uniprot.rds')
ptc_data <- format_ptc_data(readxl::read_xls('../../data/supp_11.xls'),
sgd_to_uniprot_names)
ortholog_alignments <- read_rds('../../resources/ortholog_alignments.rds')
orthogroups <- read_csv('../../data/orthogroups.csv')
out <- '../../results/lost_residues_essential.svg'
# add columns to orthogroups dataframe indicating number of lost residues
# in species orthologs to yeast, and number of such residues that are
# essential
orthogroups <- annotate_essential_lost_residues(orthogroups, ptc_data,
ortholog_alignments)
library(tidyverse)
view(orthogroups)
orthogroups %>%
group_by(species) %>%
mutate(avg_species_lost_essential = mean(num_lost_essential))
orthogroups %>%
dsa
[l]
orthogroups %>%
group_by(species) %>%
summarise(avg_species_lost_essential = mean(num_lost_essential))
orthogroups %>%
group_by(species) %>%
summarise(avg_ortholog_lost_essential = mean(num_lost_essential), avg_ortholog_lost_dispensable = mean(num_lost_dispensable), avg_ortholog_lost_unclassified = mean(num_lost_unclassified))
x = orthogroups %>%
group_by(species) %>%
summarise(avg_ortholog_lost_essential = mean(num_lost_essential), avg_ortholog_lost_dispensable = mean(num_lost_dispensable), avg_ortholog_lost_unclassified = mean(num_lost_unclassified))
view(x)
x = orthogroups %>%
group_by(species, is_microsp) %>%
summarise(avg_ortholog_lost_essential = mean(num_lost_essential), avg_ortholog_lost_dispensable = mean(num_lost_dispensable), avg_ortholog_lost_unclassified = mean(num_lost_unclassified))
view(x)
y = orthogroups %>%
group_by(species) %>%
summarise(avg_ortholog_lost_essential = mean(num_lost_essential), avg_ortholog_lost_dispensable = mean(num_lost_dispensable), avg_ortholog_lost_unclassified = mean(num_lost_unclassified))
view(y)
rm(y)
view(x)
# TODO - replace w/ command line arguments
sgd_to_uniprot_names <- read_rds('../../data/yeast_genome_to_uniprot.rds')
ptc_data <- format_ptc_data(readxl::read_xls('../../data/supp_11.xls'),
sgd_to_uniprot_names)
source("~/Desktop/Projects/snakemake_hmmscan/workflow/scripts/get_percent_lost_essential_AAs.R", echo=TRUE)
# TODO - replace w/ command line arguments
sgd_to_uniprot_names <- read_rds('../../data/yeast_genome_to_uniprot.rds')
ptc_data <- format_ptc_data(readxl::read_xls('../../data/supp_11.xls'),
sgd_to_uniprot_names)
ortholog_alignments <- read_rds('../../resources/ortholog_alignments.rds')
orthogroups <- read_csv('../../data/orthogroups.csv')
out <- '../../results/lost_residues_essential.svg'
# add columns to orthogroups dataframe indicating number of lost residues
# in species orthologs to yeast, and number of such residues that are
# essential
orthogroups <- annotate_essential_lost_residues(orthogroups, ptc_data,
ortholog_alignments)
view(orthogroups)
?pivot_longer
pivot_longer(orthogroups, cols = c('avg_ortholog_lost_essential', 'avg_ortholog_lost_dispensable', 'avg_ortholog_lost_unclassified'), names_to = 'lost_residue_type', values_to = 'avg_loss_per_ortholog')
