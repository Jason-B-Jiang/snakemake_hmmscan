localrules: generate_hmmscan_commands, resolve_domain_architectures

## Global variables
PFAM = '../data/pfam_hmm_lib/Pfam-A.hmm'
ORTHOGROUP_SEQUENCES = '../data/Orthogroup_Sequences'
HMMSCAN_COMMANDS = '../resources/hmmscan_commands'
HMMSCAN_OUTPUTS = '../results/hmmscan'
CATH_RESOLVE_HITS = '../bin/cath-resolve-hits.ubuntu-20.04'
RESOLVED_DOMAIN_ARCHS = '../results/resolved_domain_architectures'
ALIGNED_DOMAIN_ARCHS = '../results/aligned_domain_archs.csv'

################################################################################

rule all:
    input: ALIGNED_DOMAIN_ARCHS

rule clean:
    shell: "rm -r {HMMSCAN_COMMANDS} {HMMSCAN_OUTPUTS}"

rule generate_hmmscan_commands:
    """Produces text file of hmmscan commands to run, to generate hmmscan
    Pfam domain assignments for all orthogroups.
    
    Writing text file of hmmscan commands allows us to run all these commands
    in parallel to speed things up.
    """
    input: ORTHOGROUP_SEQUENCES
    output: HMMSCAN_COMMANDS
    shell: "python scripts/generate_hmmscan_commands.py {input} {output} {PFAM}"

rule run_hmmscan:
    input: HMMSCAN_COMMANDS
    output: directory(HMMSCAN_OUTPUTS)
    conda: 'envs/orthogroup_hmmscan.yml'
    shell: "mkdir -p ../results/hmmscan && parallel < {input}"

rule resolve_domain_architectures:
    input: HMMSCAN_OUTPUTS
    output: directory(RESOLVED_DOMAIN_ARCHS)
    shell: 'scripts/resolve_hmmscan_hits.sh {input} {CATH_RESOLVE_HITS}'

rule align_domain_archs:
    input: RESOLVED_DOMAIN_ARCHS
    output: ALIGNED_DOMAIN_ARCHS
    shell: "Rscript scripts/align_ortholog_domain_archs.R {input} {output}"